version: '3.8'

services:
  # Apache NiFi
  nifi:
    image: apache/nifi:1.28.1
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      - NIFI_WEB_HTTPS_PORT=8443
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=adminpassword
    volumes:      
      - ./nifi/conf:/opt/nifi/nifi-current/conf
      - ./nifi/database_repository:/opt/nifi/nifi-current/database_repository
      - ./nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ./nifi/content_repository:/opt/nifi/nifi-current/content_repository
      - ./nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
    networks:
      - data_pipeline

  # Apache Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - data_pipeline

  # Apache Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
    networks:
      - data_pipeline

  # Conduktor Platform Postgres Database
  conduktor-postgres:
    image: postgres:15
    container_name: conduktor-postgres
    environment:
      - POSTGRES_DB=conduktor
      - POSTGRES_USER=conduktor
      - POSTGRES_PASSWORD=conduktor
    volumes:
      - conduktor-postgres-data:/var/lib/postgresql/data
    networks:
      - data_pipeline

  # Conduktor Platform
  conduktor-platform:
    image: conduktor/conduktor-platform:1.21.1
    container_name: conduktor
    ports:
      - "8080:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      CDK_DATABASE_URL: postgresql://conduktor:conduktor@conduktor-postgres:5432/conduktor
      MONITORING_KAFKA-CONNECT_ENABLED: "false"
      MONITORING_KAFKA-STREAMS_ENABLED: "false"
      MONITORING_KAFKA-CONNECT_METRICS_ENABLED: "false"
      MONITORING_KAFKA-STREAMS_METRICS_ENABLED: "false"
    depends_on:
      - kafka
      - conduktor-postgres
    networks:
      - data_pipeline

  # ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:24.2
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native client interface
    environment:
      CLICKHOUSE_DB: mydatabase
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: password
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - ./clickhouse/data:/var/lib/clickhouse
      - ./clickhouse/config:/etc/clickhouse-server/config.d
    networks:
      - data_pipeline

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - data_pipeline

  # Metabase
  metabase:
    image: metabase/metabase:v0.48.6
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=metabase
      - MB_DB_PASS=metabase
      - MB_DB_HOST=metabase-postgres
    depends_on:
      - metabase-postgres
    networks:
      - data_pipeline

  # Metabase Postgres
  metabase-postgres:
    image: postgres:15
    container_name: metabase-postgres
    environment:
      - POSTGRES_DB=metabase
      - POSTGRES_USER=metabase
      - POSTGRES_PASSWORD=metabase
    volumes:
      - metabase-postgres-data:/var/lib/postgresql/data
    networks:
      - data_pipeline

  # Grafana
  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - data_pipeline

volumes:
  metabase-postgres-data:
  grafana-data:
  conduktor-postgres-data:
  postgres-data:

networks:
  data_pipeline:
    driver: bridge
